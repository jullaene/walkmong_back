name: Spring Boot CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application-prod.yml
        run: |
          cat << EOF > src/main/resources/application-prod.yml
          ${{ secrets.DATABASE_CONFIG }}

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker login docker.io -u ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
            
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker stop ${{ secrets.REPOSITORY_NAME }} || true
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker rm ${{ secrets.REPOSITORY_NAME }} || true
            
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:latest
            
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker run -d \
              --name ${{ secrets.REPOSITORY_NAME }} \
              -p 20000:8080 \
              --restart unless-stopped \
              docker.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:latest